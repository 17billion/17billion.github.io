<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-06-26T17:44:08+09:00</updated><id>http://localhost:4000/</id><title type="html">17billion</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Kubernetes 클러스터 설치 및 구성(kube 1.14.1, ubuntu 16.04)</title><link href="http://localhost:4000/kubernetes/2019/04/15/kubernetes_install_exec_14.01.html" rel="alternate" type="text/html" title="Kubernetes 클러스터 설치 및 구성(kube 1.14.1, ubuntu 16.04)" /><published>2019-04-15T11:21:42+09:00</published><updated>2019-04-15T11:21:42+09:00</updated><id>http://localhost:4000/kubernetes/2019/04/15/kubernetes_install_exec_14.01</id><content type="html" xml:base="http://localhost:4000/kubernetes/2019/04/15/kubernetes_install_exec_14.01.html">&lt;h3 id=&quot;kubernetes-1141-구성-방법-ubuntu-1604&quot;&gt;kubernetes 1.14.1 구성 방법 (ubuntu 16.04)&lt;/h3&gt;

&lt;hr /&gt;
&lt;p&gt;클러스터 구성 예시&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;IP Address&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Role&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;192.168.56.101&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;control-plane Node&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;192.168.56.102&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Worker Node&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;192.168.56.103&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Worker Node&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;1-k8s-설치-전체-노드-실행&quot;&gt;1) k8s 설치 (전체 노드 실행)&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Docker 설치 : 지난 글 참고 “&lt;a href=&quot;/docker/2019/01/10/docker_swarm.html&quot;&gt;Docker 설치 참고 (docker-ce=18.06.1~ce~3-0~ubuntu)&lt;/a&gt;” &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;$ sudo apt install apt-transport-https&lt;/li&gt;
  &lt;li&gt;$ curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add&lt;/li&gt;
  &lt;li&gt;$ sudo add-apt-repository “deb https://apt.kubernetes.io/ kubernetes-$(lsb_release -cs) main”&lt;/li&gt;
  &lt;li&gt;$ sudo apt update&lt;/li&gt;
  &lt;li&gt;$ sudo apt install kubelet=1.14.1-00 kubeadm=1.14.1-00 kubectl=1.14.1-00 kubernetes-cni=0.7.5-00&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2-control-plane-node-구-master-node-구성&quot;&gt;2) Control Plane Node (구 Master Node) 구성&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;kubeadm-config.yaml 파일 생성 (아래 control-plane-node 부분은 Bode IP나 HA구성을 할 경우 연결 시킬 LB 주소를 입력)
    &lt;blockquote&gt;
      &lt;p&gt;$ vi kubeadm-config.yaml&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: kubeadm.k8s.io/v1beta1
kind: ClusterConfiguration
kubernetesVersion: v1.14.1
controlPlaneEndpoint: 192.168.56.101:6443
networking:
  podSubnet: 10.244.0.0/16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;생성된 파일을 이용하여 초기화
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo kubeadm init –config=kubeadm-config.yaml –experimental-upload-certs&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;결과 : 
... 생략
To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of the control-plane node running the following command on each as root:

  kubeadm join 192.168.56.101:6443 --token tf9afj.p3hglea5pdk4v23m \
    --discovery-token-ca-cert-hash sha256:e46f607087a9daf7d30b9afd0ff4f5ec7c4eb41f49ca2f5ba271eb01137e8e78 \
    --experimental-control-plane --certificate-key f4fdb1c3d25baa05eef7c5cd92f49e0d01425679da7871b760ddee33eaaddf57

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
&quot;kubeadm init phase upload-certs --experimental-upload-certs&quot; to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 192.168.56.101:6443 --token tf9afj.p3hglea5pdk4v23m \
    --discovery-token-ca-cert-hash sha256:e46f607087a9daf7d30b9afd0ff4f5ec7c4eb41f49ca2f5ba271eb01137e8e78
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ mkdir -p $HOME/.kube &lt;br /&gt;
  $ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config &lt;br /&gt;
  $ sudo chown $(id -u):$(id -g) $HOME/.kube/config &lt;br /&gt;
  :: kubectl 명령어를 사용하고 싶은 계정에서 실행 &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;$ kubeadm join 192.168.56.101:6443 –token tf9afj.p3hglea5pdk4v13m \ &lt;br /&gt;
    –discovery-token-ca-cert-hash sha256:e46f607087a9daf7d30b9afd0ff4f5ec7c4eb41f49ca2f5ba271eb0113123 \ &lt;br /&gt;
    –experimental-control-plane –certificate-key f4fdb1c3d25baa05eef7c5cd92f49e0d01425679da7871b760ddee33eaa123 &lt;br /&gt;
  :: 타 노드에서 Control-Plane Node로 HA로 구성하고 싶을 경우 실행 (전체가 한개의 명령어) &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;$ kubeadm join 192.168.56.101:6443 –token tf9afj.p3hglea5pdk4v13m \ &lt;br /&gt;
    –discovery-token-ca-cert-hash sha256:e46f607087a9daf7d30b9afd0ff4f5ec7c4eb41f49ca2f5ba271eb0113123&lt;br /&gt;
  :: 타 노드에서 일반 Worker Node로 올릴 경우 실행 (전체가 한개의 명령어) &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;3-worker-node-구성&quot;&gt;3) Worker Node 구성&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;위 명령어 중
    &lt;blockquote&gt;
      &lt;p&gt;$ kubeadm join 192.168.56.101:6443 –token tf9afj.p3hglea5pdk4v13m \ &lt;br /&gt;
 –discovery-token-ca-cert-hash sha256:e46f607087a9daf7d30b9afd0ff4f5ec7c4eb41f49ca2f5ba271eb0113123 &lt;br /&gt;
  위 형식의 명령어를 실행 &lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;4-cluster-구성-확인-control-plane-node에서-실행&quot;&gt;4) Cluster 구성 확인 (Control-Plane Node에서 실행)&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;kubectl get nodes
    &lt;blockquote&gt;
      &lt;p&gt;$ kubectl get nodes&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NAME     STATUS     ROLES    AGE   VERSION
master   Ready      master   1h   v1.14.1
node1    Ready   &amp;lt;none&amp;gt;   1h   v1.14.1
node2    Ready   &amp;lt;none&amp;gt;   1h   v1.14.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;toubleshooting&quot;&gt;Toubleshooting&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;coredns가 안떠서 NotReady 상태인 경우
    &lt;blockquote&gt;
      &lt;p&gt;$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;running with swap on is not supported. Please disable swap 이 메세지가 뜰 경우
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo swapoff -a&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="kubernetes" /><summary type="html">kubernetes 1.14.1 구성 방법 (ubuntu 16.04)</summary></entry><entry><title type="html">Docker Swarm : 특정 조건(hostname, role, labels 등)을 지정하여 컨테이너 올리기 (constraint 옵션)</title><link href="http://localhost:4000/docker/2019/03/12/docker_constraint.html" rel="alternate" type="text/html" title="Docker Swarm : 특정 조건(hostname, role, labels 등)을 지정하여 컨테이너 올리기 (constraint 옵션)" /><published>2019-03-12T03:31:42+09:00</published><updated>2019-03-12T03:31:42+09:00</updated><id>http://localhost:4000/docker/2019/03/12/docker_constraint</id><content type="html" xml:base="http://localhost:4000/docker/2019/03/12/docker_constraint.html">&lt;h3 id=&quot;특정-조건hostname-role-labels-등을-지정하여-컨테이너-올리기&quot;&gt;특정 조건(hostname, role, labels 등)을 지정하여 컨테이너 올리기&lt;/h3&gt;
&lt;p&gt;예시) “node1” Node에만 컨테이너 올리기, Manager Node에만 컨테이너 올리기 등&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;예시 1) &quot;node1&quot; Node에만 컨테이너 올리기
user@master:/scloud/docker/yaml$ cat docker-compose.yml
version: '3'
services:
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    deploy:
      replicas: 2
      placement:
        constraints: [node.hostname == node1]
    networks:
      - nginx

networks:
  nginx:

user@master:/scloud/docker/yaml$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
lzc7bkkg9kpc        test_nginx          replicated          2/2                 nginx:latest        *:80-&amp;gt;80/tcp, *:443-&amp;gt;443/tcp
user@master:/scloud/docker/yaml$ docker service ps test_nginx
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE            ERROR               PORTS
lkxuit71s0l9        test_nginx.1        nginx:latest        node1               Running             Running 23 minutes ago
t357q0jes2sk        test_nginx.2        nginx:latest        node1               Running             Running 13 seconds ago


예시 2) Manager Node에만 컨테이너 올리기 (Manager Node : Master, Node2)
user@master:/scloud/docker/yaml$ cat docker-compose.yml
version: '3'
services:
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    deploy:
      replicas: 2
      placement:
        constraints: [node.role==manager]
    networks:
      - nginx

networks:
  nginx:

user@master:/scloud/docker/yaml$ docker stack deploy -c docker-compose.yml test
Updating service test_nginx (id: lzc7bkkg9kpckr0je715iw0r4)

user@master:/scloud/docker/yaml$ docker service ps test_nginx
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE             ERROR               PORTS
2eao19s4q53m        test_nginx.1        nginx:latest        node2               Running             Running 19 seconds ago
lkxuit71s0l9         \_ test_nginx.1    nginx:latest        node1               Shutdown            Shutdown 20 seconds ago
ji20e0d966qq        test_nginx.2        nginx:latest        master              Running             Running 23 seconds ago
t357q0jes2sk         \_ test_nginx.2    nginx:latest        node1               Shutdown            Shutdown 24 seconds ago

user@master:/scloud/docker/yaml$ docker service ps test_nginx
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE            ERROR               PORTS
2eao19s4q53m        test_nginx.1        nginx:latest        node2               Running             Running 4 minutes ago
ji20e0d966qq        test_nginx.2        nginx:latest        master              Running             Running 4 minutes ago
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;옵션 종류(https://docs.docker.com/engine/reference/commandline/service_create/#specify-service-placement-preferences-placement-pref 참고)&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;node&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;attribute&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;matches	example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;node.id&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Node ID&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;node.id==2ivku8v2gvtg4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;node.hostname&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Node hostname&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;node.hostname!=node-2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;node.role&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Node role&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;node.role==manager&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;node.labels&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;user defined node labels&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;node.labels.security==high&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;engine.labels&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Docker Engine’s labels&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;engine.labels.operatingsystem==ubuntu 14.04&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;참고사이트 &lt;br /&gt;
Docker : https://docs.docker.com/engine/reference/commandline/service_create/#specify-service-placement-preferences-placement-pref&lt;/p&gt;</content><author><name></name></author><category term="docker" /><summary type="html">특정 조건(hostname, role, labels 등)을 지정하여 컨테이너 올리기 예시) “node1” Node에만 컨테이너 올리기, Manager Node에만 컨테이너 올리기 등</summary></entry><entry><title type="html">Docker Swarm : yaml 파일을 이용하여 Service 올리기</title><link href="http://localhost:4000/docker/2019/02/25/docker_swarm_stack_yaml.html" rel="alternate" type="text/html" title="Docker Swarm : yaml 파일을 이용하여 Service 올리기" /><published>2019-02-25T03:31:42+09:00</published><updated>2019-02-25T03:31:42+09:00</updated><id>http://localhost:4000/docker/2019/02/25/docker_swarm_stack_yaml</id><content type="html" xml:base="http://localhost:4000/docker/2019/02/25/docker_swarm_stack_yaml.html">&lt;h3 id=&quot;docker-swarm--yaml-파일을-이용하여-service-올리기&quot;&gt;Docker Swarm : yaml 파일을 이용하여 Service 올리기&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;(Manager Node) $ docker stack deploy [OPTIONS] STACK&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;예시) nginx 컨테이너 2EA 올리기
user@master:/scloud/docker/yaml$ cat docker-compose.yml
version: '3'
services:
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    deploy:
      replicas: 2
    networks:
      - nginx

networks:
  nginx:

user@master:/scloud/docker/yaml$ docker stack deploy --compose-file docker-compose.yml test
Creating network test_nginx
Creating service test_nginx

user@master:/scloud/docker/yaml$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
lzc7bkkg9kpc        test_nginx          replicated          2/2                 nginx:latest        *:80-&amp;gt;80/tcp, *:443-&amp;gt;443/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;추가 예시) 배포된 서비스에서 Scale 1EA로 변경하기
1. 위 yml파일에서 replicas &amp;gt; 1로 변경
2. $ docker stack deploy --compose-file docker-compose.yml test
아래 참고.
user@master:/scloud/docker/yaml$ cat docker-compose.yml
version: '3'
services:
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    deploy:
      replicas: 1
    networks:
      - nginx

networks:
  nginx:
user@master:/scloud/docker/yaml$ docker stack deploy -c docker-compose.yml test
Updating service test_nginx (id: lzc7bkkg9kpckr0je715iw0r4)
user@master:/scloud/docker/yaml$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
lzc7bkkg9kpc        test_nginx          replicated          1/1                 nginx:latest        *:80-&amp;gt;80/tcp, *:443-&amp;gt;443/tcp

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고사이트 &lt;br /&gt;
Docker : https://docs.docker.com/engine/reference/commandline/stack_deploy/&lt;/p&gt;</content><author><name></name></author><category term="docker" /><summary type="html">Docker Swarm : yaml 파일을 이용하여 Service 올리기 (Manager Node) $ docker stack deploy [OPTIONS] STACK</summary></entry><entry><title type="html">Docker Swarm : Worker Node를 Manager Node로 승격시키기</title><link href="http://localhost:4000/docker/2019/02/05/docker_swarm_promote.html" rel="alternate" type="text/html" title="Docker Swarm : Worker Node를 Manager Node로 승격시키기" /><published>2019-02-05T01:31:42+09:00</published><updated>2019-02-05T01:31:42+09:00</updated><id>http://localhost:4000/docker/2019/02/05/docker_swarm_promote</id><content type="html" xml:base="http://localhost:4000/docker/2019/02/05/docker_swarm_promote.html">&lt;h3 id=&quot;docker-swarm--worker-nodenode2를-manager-node로-승격시키기&quot;&gt;Docker Swarm : Worker Node(Node2)를 Manager Node로 승격시키기&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;(Manager Node에서 실행) $ docker node promote NODE [NODE…]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;예시)
user@master:~$ docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
oczmgznj47bd58abjmrql4gc5 *   master              Ready               Active              Leader              18.06.1-ce
z0afqkd570azc1pppxg1b6gsl     node1               Ready               Active                                  18.06.1-ce
zuz034mvcr2owqb7q4zgw3dn2     node2               Ready               Active                                  18.06.1-ce

user@master:~$ docker node promote node2
Node node2 promoted to a manager in the swarm.

user@master:~$ docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
oczmgznj47bd58abjmrql4gc5 *   master              Ready               Active              Leader              18.06.1-ce
z0afqkd570azc1pppxg1b6gsl     node1               Ready               Active                                  18.06.1-ce
zuz034mvcr2owqb7q4zgw3dn2     node2               Ready               Active              Reachable           18.06.1-ce

user@node2:~$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
f1ii0n7slud7        nginx_service       replicated          1/1                 nginx:latest

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고사이트 &lt;br /&gt;
Docker : https://docs.docker.com/engine/reference/commandline/node_promote/&lt;/p&gt;</content><author><name></name></author><category term="docker" /><summary type="html">Docker Swarm : Worker Node(Node2)를 Manager Node로 승격시키기 (Manager Node에서 실행) $ docker node promote NODE [NODE…]</summary></entry><entry><title type="html">Docker Swarm : Scale In-Out 명령어</title><link href="http://localhost:4000/docker/2019/01/17/docker_scale_swarm_in_out.html" rel="alternate" type="text/html" title="Docker Swarm : Scale In-Out 명령어" /><published>2019-01-17T12:31:42+09:00</published><updated>2019-01-17T12:31:42+09:00</updated><id>http://localhost:4000/docker/2019/01/17/docker_scale_swarm_in_out</id><content type="html" xml:base="http://localhost:4000/docker/2019/01/17/docker_scale_swarm_in_out.html">&lt;h3 id=&quot;docker-swarm-scale-in-out&quot;&gt;Docker Swarm Scale In-Out&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ docker service scale SERVICE=REPLICAS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;예시)
0EA로 Scale In $ docker service scale nginx_service=0
3EA로 Scale Out $ docker service scale nginx_service=3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고사이트 &lt;br /&gt;
Docker : https://docs.docker.com/engine/reference/commandline/service_scale/&lt;/p&gt;</content><author><name></name></author><category term="docker" /><summary type="html">Docker Swarm Scale In-Out $ docker service scale SERVICE=REPLICAS</summary></entry><entry><title type="html">Docker Swarm 구성하기</title><link href="http://localhost:4000/docker/2019/01/10/docker_swarm.html" rel="alternate" type="text/html" title="Docker Swarm 구성하기" /><published>2019-01-10T12:31:42+09:00</published><updated>2019-01-10T12:31:42+09:00</updated><id>http://localhost:4000/docker/2019/01/10/docker_swarm</id><content type="html" xml:base="http://localhost:4000/docker/2019/01/10/docker_swarm.html">&lt;h3 id=&quot;docker-swarm-이란&quot;&gt;Docker Swarm 이란&lt;/h3&gt;
&lt;p&gt;Container Orchestration 중 하나로 Docker v1.12 이후부터 Swarm Mode가 통합되면서 쉽게 구성이 가능해짐
클러스터를 관리하는 Manager Node와 실제 컨테이너를 실행하는 Worker Node가 있음
&lt;img src=&quot;\images\docker_swarm\swarm-diagram.png&quot; alt=&quot;docker_Swarm&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Manager Node 역할&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;클러스터 상태 유지&lt;/li&gt;
    &lt;li&gt;스케줄링 서비스&lt;/li&gt;
    &lt;li&gt;HTTP API Endpoints 제공&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Manager Node 구성 중 확인사항&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;기본적으로 3EA의 Manager Node는 1EA Stop 허용&lt;/li&gt;
    &lt;li&gt;5EA의 Manager Node는 최대 2EA Stop 허용&lt;/li&gt;
    &lt;li&gt;N EA의 Manager Node 최대 Stop 허용 갯수 :  (N-1)/2&lt;/li&gt;
    &lt;li&gt;Docker는 최대 7EA의 Manager Node를 권장&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;※ Manager Node를 추가한다고해서 확장성또는 성능이 향상되진 않음. 일반적으로 그 반대가 사실.&lt;/p&gt;

&lt;h3 id=&quot;docker-swarm-구성-manager-node-1ea-worker-node-2ea-&quot;&gt;Docker Swarm 구성 (Manager Node 1EA Worker Node 2EA) &lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;Master &amp;gt; Manager Node(192.168.56.101) &lt;br /&gt;
node1 &amp;gt;  Worker Node(192.168.56.102) &lt;br /&gt;
node2 &amp;gt; Worker Node(192.168.56.103) &lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;docker-설치&quot;&gt;Docker 설치&lt;/h4&gt;
&lt;p&gt;(https://17billion.github.io/docker/2017/03/10/docker_install_exec.html 참고)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;18.06.1-ce 설치
1. $ sudo apt-get update
2. $ sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
3. $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg \| sudo apt-key add - 
4. $ sudo add-apt-repository \
   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&quot;
5. $ sudo apt-get update
6. $ sudo apt-get install docker-ce=18.06.1~ce~3-0~ubuntu
7. $ sudo usermod -aG docker $USER 
   (현재 사용자에게 권한부여)
8. (재 로그인 후) $ docker ps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;swarm-init-manager-node&quot;&gt;Swarm init (Manager Node)&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker swarm init --advertise-addr 
예시) user@master:~$ docker swarm init --advertise-addr 192.168.56.101
결과
Swarm initialized: current node (oczmgznj47bd58abjmrql4gc5) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1pud4gaae2bvwkqhbk1fngfsrw55v074lzoqd8fn31wxgmf0vj-egtud2vn5iam21giwki5kqxev 192.168.56.101:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;swarm-join-worker-node&quot;&gt;Swarm join (Worker Node)&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;위 결과에서 나온 명령어 실행
예시) user@node2:~$ docker swarm join --token SWMTKN-1-1pud4gaae2bvwkqhbk1fngfsrw55v04lzoqd8fn31wxgmf0vj-egtud2vn5iam21giwki5kqxev 192.168.56.101:2377
This node joined a swarm as a worker.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;확인-nginx-3ea-생성&quot;&gt;확인 (nginx 3EA 생성)&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. (Manager Node) user@master:~$ docker service create --name nginx_service --replicas 3 nginx
2. $ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
f1ii0n7slud7        nginx_service       replicated          3/3                 nginx:latest
3. $ docker service ps nginx_service 
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE                ERROR               PORTS
v4sctczj607a        nginx_service.1     nginx:latest        master              Running             Running 56 seconds ago
neeyipblvb3i        nginx_service.2     nginx:latest        node1               Running             Running about a minute ago
qzorauvtvja3        nginx_service.3     nginx:latest        node2               Running             Running 59 seconds ago
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;※ Swarm 탈퇴하기
$ docker swarm leave&lt;/p&gt;

&lt;p&gt;참고사이트 &lt;br /&gt;
docker.com : https://docs.docker.com/engine/reference/commandline/swarm_init/ &lt;br /&gt;
subicura님 블로그 : https://subicura.com/2017/02/25/container-orchestration-with-docker-swarm.html &lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="docker" /><summary type="html">Docker Swarm 이란 Container Orchestration 중 하나로 Docker v1.12 이후부터 Swarm Mode가 통합되면서 쉽게 구성이 가능해짐 클러스터를 관리하는 Manager Node와 실제 컨테이너를 실행하는 Worker Node가 있음</summary></entry><entry><title type="html">InfluxDB(1.6.3), Telegraf(1.7.4), Grafana(5.2.4)를 이용한 서버 모니터링 하기</title><link href="http://localhost:4000/grafana/2018/11/28/influx_telegraf_grafana.html" rel="alternate" type="text/html" title="InfluxDB(1.6.3), Telegraf(1.7.4), Grafana(5.2.4)를 이용한 서버 모니터링 하기" /><published>2018-11-28T02:21:42+09:00</published><updated>2018-11-28T02:21:42+09:00</updated><id>http://localhost:4000/grafana/2018/11/28/influx_telegraf_grafana</id><content type="html" xml:base="http://localhost:4000/grafana/2018/11/28/influx_telegraf_grafana.html">&lt;h3 id=&quot;구성&quot;&gt;구성&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/grafana/0.png&quot; alt=&quot;0&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;influxdb-설치-및-실행-163&quot;&gt;InfluxDB 설치 및 실행 (1.6.3)&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;$ wget https://dl.influxdata.com/influxdb/releases/influxdb_1.6.3_amd64.deb &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;$ sudo dpkg -i influxdb_1.6.3_amd64.deb &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;$ curl -sL https://repos.influxdata.com/influxdb.key | sudo apt-key add - &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;$ source /etc/lsb-release &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;$ echo “deb https://repos.influxdata.com/${DISTRIB_ID,,} ${DISTRIB_CODENAME} stable” | sudo tee /etc/apt/sources.list.d/influxdb.list &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;(실행) $ sudo service influxdb start &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;(확인) $ influx &lt;br /&gt;
Connected to http://localhost:8086 version 1.6.3 &lt;br /&gt;
InfluxDB shell version: 1.6.3 &lt;br /&gt;
\ &amp;gt;&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;telegraf174-설치-및-실행&quot;&gt;telegraf(1.7.4) 설치 및 실행&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;$ wget https://dl.influxdata.com/telegraf/releases/telegraf_1.7.4-1_amd64.deb &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;$ sudo dpkg -i telegraf_1.7.4-1_amd64.deb &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;(확인) $ ps -ef | grep telegraf &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;(InfluxDB 설정) $ sudo vi /etc/telegraf/telegraf.conf &lt;br /&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[[outputs.influxdb]]
  urls = [&quot;http://{$influxDB ip 넣기}:8086&quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;(재시작) $ sudo service telegraf restart&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;grafana-설치-및-실행&quot;&gt;Grafana 설치 및 실행&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;$ wget https://dl.influxdata.com/telegraf/releases/telegraf_1.7.4_amd64.deb &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;$ sudo apt-get install -y adduser libfontconfig &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;$ sudo dpkg -i grafana_5.2.4_amd64.deb &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;$ sudo service grafana-server status &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;접속 : http://{grafana ip}:3000/login 접속 (환경설정 : /etc/grafana/grafana.ini) &lt;br /&gt;
      &lt;ul&gt;
        &lt;li&gt;계정 : admin / admin
&lt;img src=&quot;/images/grafana/1 login.png&quot; alt=&quot;1_login&quot; /&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;※ Grafana 설치 진행 중 아래처럼 오류가 날경우 $ sudo apt-get -f install 실행 필요
Unpacking grafana (5.2.4) over (5.2.4) ...
dpkg: dependency problems prevent configuration of grafana:
 grafana 패키지는 다음 패키지에 의존: libfontconfig: 하지만:
  libfontconfig 패키지는 설치하지 않았습니다.

dpkg: error processing package grafana (--install):
 의존성 문제 - 설정하지 않고 남겨둠
Processing triggers for systemd (229-4ubuntu21.16) ...
Processing triggers for ureadahead (0.100.0-19) ...
처리하는데 오류가 발생했습니다:
 grafana
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;grafana-dashboard-만들기&quot;&gt;Grafana Dashboard 만들기&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;Datasource 생성 메뉴 선택&lt;br /&gt;
&lt;img src=&quot;/images/grafana/2 select_datasource.png&quot; alt=&quot;2 select_datasource&quot; /&gt;&lt;/li&gt;
    &lt;li&gt;Add 버튼 클릭&lt;br /&gt;
&lt;img src=&quot;/images/grafana/3 add_datasource.png&quot; alt=&quot;3 add_datasource&quot; /&gt;&lt;/li&gt;
    &lt;li&gt;설정 후 Save &amp;amp; Test 클릭 &lt;br /&gt;
&lt;img src=&quot;/images/grafana/4 setting_datasource.png&quot; alt=&quot;4 setting_datasource&quot; /&gt;&lt;/li&gt;
    &lt;li&gt;Telegraf Dashboard Import&lt;br /&gt;
&lt;img src=&quot;/images/grafana/5 import_dashboard.png&quot; alt=&quot;5 import_dashboard&quot; /&gt;
&lt;img src=&quot;/images/grafana/6 import_dashboard_2.png&quot; alt=&quot;6 import_dashboard_2&quot; /&gt;&lt;/li&gt;
    &lt;li&gt;Dashboard&lt;br /&gt;
 &lt;img src=&quot;/images/grafana/7 dashboard.png&quot; alt=&quot;7 dashboard_2&quot; /&gt;&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;참고 사이트 &lt;br /&gt;
YENA WORLD : https://yenaworldblog.wordpress.com/2017/07/28/influxdb/ &lt;br /&gt;
grafana : https://grafana.com/grafana/download/5.2.4?platform=linux &lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="grafana" /><summary type="html">구성</summary></entry><entry><title type="html">Linux 명령어 - awk를 이용하여 배열에 저장하기</title><link href="http://localhost:4000/linux/2018/10/15/linux_awk_array.html" rel="alternate" type="text/html" title="Linux 명령어 - awk를 이용하여 배열에 저장하기" /><published>2018-10-15T09:51:42+09:00</published><updated>2018-10-15T09:51:42+09:00</updated><id>http://localhost:4000/linux/2018/10/15/linux_awk_array</id><content type="html" xml:base="http://localhost:4000/linux/2018/10/15/linux_awk_array.html">&lt;h3 id=&quot;awk&quot;&gt;awk&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;awk는 기본적으로 패턴과 패턴을 처리하는 명령어 짝을 늘여놓은 구조로 이루어져 있다. 입력으로부터 한 줄씩을 읽어서 정규 표현식으로 조건이 맞는지를 검사하고 참으로 판명되면 그 줄에 대해 명령어를 실행하는 형식이다.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;사용법: 
Usage: awk [POSIX or GNU style options] -f progfile [--] file ...
Usage: awk [POSIX or GNU style options] [--] 'program' file ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;awk를-이용하여-문자열-배열에-저장하기&quot;&gt;awk를 이용하여 문자(열) 배열에 저장하기&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;배열의 원소번호(index)는 1부터 시작한다. 위의 예시에서 첫번째 원소가 arr[1]에 있다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예시&lt;/p&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@master:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s:t:r:i:n:g&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{split($0, arr, &quot;:&quot;); print arr[1]}'&lt;/span&gt;
s
user@master:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;S? T, R I! N G?&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ split($0, arr, /[ .,?!]+/); print arr[5] }'&lt;/span&gt;
N
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;참고 사이트 &lt;br /&gt;
위키백과 : https://ko.wikipedia.org/wiki/AWK&lt;/p&gt;</content><author><name></name></author><category term="Linux" /><summary type="html">awk awk는 기본적으로 패턴과 패턴을 처리하는 명령어 짝을 늘여놓은 구조로 이루어져 있다. 입력으로부터 한 줄씩을 읽어서 정규 표현식으로 조건이 맞는지를 검사하고 참으로 판명되면 그 줄에 대해 명령어를 실행하는 형식이다. 사용법: Usage: awk [POSIX or GNU style options] -f progfile [--] file ... Usage: awk [POSIX or GNU style options] [--] 'program' file ...</summary></entry><entry><title type="html">Linux 명령어 - grep 정규표현식</title><link href="http://localhost:4000/linux/2018/09/21/linux_grep_regular_expressions.html" rel="alternate" type="text/html" title="Linux 명령어 - grep 정규표현식" /><published>2018-09-21T09:51:42+09:00</published><updated>2018-09-21T09:51:42+09:00</updated><id>http://localhost:4000/linux/2018/09/21/linux_grep_regular_expressions</id><content type="html" xml:base="http://localhost:4000/linux/2018/09/21/linux_grep_regular_expressions.html">&lt;h3 id=&quot;grep&quot;&gt;grep&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;grep은 유닉스를 위해 만들어진 텍스트 검색 기능을 가진 명령어이다. 그 이름은 유닉스 ed의 명령어로 비슷한 기능을 수행하는 g/re/p(global / regular expression / print)에서 유래되었다. &lt;br /&gt;
grep 명령어는 파일이나 표준 입력을 검색하여 주어진 정규 표현식과 맞는 줄을 찾아 프로그램의 표준 출력으로 출력한다.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;사용법: grep [옵션]... 패턴 [파일]...
grep [options] pattern [file...] 
grep [options] [-e pattern | -f patternFile] [file…] 
예제: grep -i 'hello world' menu.h main.c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;grep 정규표현식 메타문자 &lt;br /&gt;
 ^ : 라인 시작 ex) ‘^string’ &lt;br /&gt;
 $ : 라인의 마지막 ex) ‘string$’ &lt;br /&gt;
 . : 하나의 문자 매칭 ex) ‘s….g’ &lt;br /&gt;
 * : 문자가 없거나 그 이상의 문자들 매칭 ex) ‘[s-z]*’ &lt;br /&gt;
 [] : []안의 문자 중 하나 이상 매칭 ex) ‘[Ss]tring’ &lt;br /&gt;
 [^] : []안의 문자 중 하나도 매칭되지 않는 문자 ex) ‘[^a-r]tring’ &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;예시
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@master:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;test.txt
String Hi
Last String
String
StringT_T
string
Ztring
user@master:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^String'&lt;/span&gt; test.txt
String Hi
String
StringT_T
user@master:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'String$'&lt;/span&gt; test.txt
Last String
String
user@master:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'S....g'&lt;/span&gt; test.txt
String Hi
Last String
String
StringT_T
user@master:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[s-z]*'&lt;/span&gt; test.txt
String Hi
Last String
String
StringT_T
string
Ztring
user@master:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[Ss]tring'&lt;/span&gt; test.txt
String Hi
Last String
String
StringT_T
string
user@master:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[^a-r]tring'&lt;/span&gt; test.txt
String Hi
Last String
String
StringT_T
string
Ztring
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;참고 사이트 &lt;br /&gt;
위키백과 : https://ko.wikipedia.org/wiki/Grep
real-world-systems. : https://www.real-world-systems.com/docs/grep.1.html&lt;/p&gt;</content><author><name></name></author><category term="Linux" /><summary type="html">grep grep은 유닉스를 위해 만들어진 텍스트 검색 기능을 가진 명령어이다. 그 이름은 유닉스 ed의 명령어로 비슷한 기능을 수행하는 g/re/p(global / regular expression / print)에서 유래되었다. grep 명령어는 파일이나 표준 입력을 검색하여 주어진 정규 표현식과 맞는 줄을 찾아 프로그램의 표준 출력으로 출력한다. 사용법: grep [옵션]... 패턴 [파일]... grep [options] pattern [file...] grep [options] [-e pattern | -f patternFile] [file…] 예제: grep -i 'hello world' menu.h main.c</summary></entry><entry><title type="html">Comparator - HackerRank</title><link href="http://localhost:4000/algorithm/2018/09/01/Comparator.html" rel="alternate" type="text/html" title="Comparator - HackerRank" /><published>2018-09-01T20:00:00+09:00</published><updated>2018-09-01T20:00:00+09:00</updated><id>http://localhost:4000/algorithm/2018/09/01/Comparator</id><content type="html" xml:base="http://localhost:4000/algorithm/2018/09/01/Comparator.html">&lt;h4 id=&quot;comparator&quot;&gt;Comparator&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Comparator를 이용해서 오브젝트 정렬하기&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Sample Input
5
amy 100
david 100
heraldo 50
aakansha 75
aleksa 150

Sample Output
aleksa 150
amy 100
david 100
aakansha 75
heraldo 50
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Checker&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comparator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// complete this method&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Comparator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Checker&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Checker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s %s\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;priorityqueue-comparable-이용&quot;&gt;PriorityQueue, Comparable 이용&lt;/h4&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Player&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comparable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Comparator_pq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NumberFormatException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;PriorityQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PriorityQueue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;StringTokenizer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringTokenizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;pq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고 사이트 &lt;br /&gt;
HackerRank : https://www.hackerrank.com/&lt;/p&gt;</content><author><name></name></author><category term="algorithm" /><summary type="html">Comparator Comparator를 이용해서 오브젝트 정렬하기</summary></entry></feed>