<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-08-12T19:54:37+09:00</updated><id>http://localhost:4000/</id><title type="html">17billion</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Kafka 메세지를 Logstash를 이용하여 Elastic Search에 저장하기 Kafka(0.10.0.1) / Logstash(5.5.1) / Elastic Search(5.5.1)</title><link href="http://localhost:4000/elastic,/kafka/2017/10/05/elastic_stack_elk_kafka.html" rel="alternate" type="text/html" title="Kafka 메세지를 Logstash를 이용하여 Elastic Search에 저장하기 Kafka(0.10.0.1) / Logstash(5.5.1) / Elastic Search(5.5.1)" /><published>2017-10-05T09:51:42+09:00</published><updated>2017-10-05T09:51:42+09:00</updated><id>http://localhost:4000/elastic,/kafka/2017/10/05/elastic_stack_elk_kafka</id><content type="html" xml:base="http://localhost:4000/elastic,/kafka/2017/10/05/elastic_stack_elk_kafka.html">&lt;p&gt;Kafka(2.10-0.10.0.1) + Logstash(5.5.1) + Elastic Search(5.5.1)&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;kafka에-저장된-메세지apache-log를-logstash를-이용하여-elastic-search에-저장하기-&quot;&gt;Kafka에 저장된 메세지(apache log)를 Logstash를 이용하여 Elastic Search에 저장하기 &lt;br /&gt;&lt;/h4&gt;

&lt;h3 id=&quot;1-elastic-search-설치-및-실행-&quot;&gt;1. elastic search 설치 및 실행 &lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;1-1. elastic search 설치 &lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/elastic/2017/07/05/ELK_install_exec.html&quot;&gt;‘ELK 구축 (Elastic Search + Kibana + Logstash) 1. ElasticSearch를 설치합니다.’ 참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1-2. elasticsearch.yml 설정변경 &lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;elastic search를 localhost가 아닌 외부에서 접근하기 위해서는 elasticsearch.yml에서 network.host를 ip로 지정 후 재시작 필요
    &lt;blockquote&gt;
      &lt;p&gt;(../elasticsearch-5.5.1/config 디렉토리에서 실행) &lt;br /&gt;
$ vi elasticsearch.yml&lt;/p&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
network.host: 192.168.56.102
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
      &lt;p&gt;※ 192.168.56.102는 elasticsearch 설치된 인스턴스 ip로 변경&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1-3. system 환경 설정&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ sudo vi /etc/security/limits.conf&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(아래내용 추가, user는 사용자 계정으로 변경)
user hard nofile 65536
user soft nofile 65536
user hard nproc 65536
user soft nproc 65536
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;$ sudo vi /etc/rc.local&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(exit 0 윗 부분에 아래 내용추가 )
echo 1048575 &amp;gt; /proc/sys/vm/max_map_count
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;$ sudo sysctl -w fs.file-max=65536&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(확인)
cat /proc/sys/fs/file-max
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;$ sudo reboot 0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1-4 실행&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;(../elasticsearch-5.5.1/bin 디렉토리에서 실행) &lt;br /&gt;
$ ./elasticsearch&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;2-kafka-설치-및-실행-및-메세지-프로듀싱-&quot;&gt;2. kafka 설치 및 실행 및 메세지 프로듀싱 &lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;2-1. kafka 설치 및 topic 생성 &lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/elastic/2017/09/20/filebeat_kafka.html&quot;&gt;‘로그를 filebeat(5.3.0) 이용해서 kafka(0.10.0.1)로 프로듀싱하기’ 참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-logstash-설치-및-실행-&quot;&gt;3. logstash 설치 및 실행 &lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;3-1. logstash 설치 &lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/elastic/2017/07/05/ELK_install_exec.html&quot;&gt;‘ELK 구축 (Elastic Search + Kibana + Logstash)’ 2-1. Logstash 다운로드 및 unzip 참고&lt;/a&gt; &lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3-2. logstash-input-kafka 플러그인 설치&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;(../logstash-5.5.1/bin 디렉토리에서 실행) &lt;br /&gt;
$ ./logstash-plugin install --version 8.0.2 logstash-input-kafka&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Validating logstash-input-kafka-8.0.2
Installing logstash-input-kafka
Installation successful
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;(확인) ./logstash-plugin list --verbose input-kafka&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;logstash-input-kafka (8.0.2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;3-3. logstash-output-elasticsearch 플러그인 설치&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;(../logstash-5.5.1/bin 디렉토리에서 실행) &lt;br /&gt;
$ ./logstash-plugin install logstash-output-elasticsearch&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Validating logstash-output-elasticsearch
Installing logstash-output-elasticsearch
Installation successful
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;(확인) $ ./logstash-plugin list --verbose logstash-output-elasticsearch&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;logstash-output-elasticsearch (7.3.7)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;3-4 config 설정&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;(../logstash-5.5.1/bin 디렉토리에서 실행) &lt;br /&gt;
$ vi logstash-kafka-elasticsearch.conf &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;input {
  kafka {
    bootstrap_servers =&amp;gt; &quot;192.168.56.103:9092&quot;
    group_id =&amp;gt; &quot;logstash&quot;
    topics =&amp;gt; [&quot;apache_logs&quot;]
    consumer_threads =&amp;gt; 1
    decorate_events =&amp;gt; true
    }
}

output {
  elasticsearch{
        hosts =&amp;gt; &quot;192.168.56.102:9200&quot;
        index =&amp;gt; &quot;server-status-%{+YYYY.MM.dd}&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;input의 bootstrap_servers는 kafka IP주소&lt;/li&gt;
  &lt;li&gt;topics명을 kafka에 생성되어 있는 topic 명&lt;/li&gt;
  &lt;li&gt;output의 hosts는 elasticsearch의 IP 주소를 입력&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3-5. 실행&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;(../logstash-5.5.1/bin 디렉토리에서 실행) &lt;br /&gt;
$ ./logstash -f logstash-kafka-elasticsearch.conf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;참고 ‘logstash Setting “xpack.monitoring.enabled” has not been registered’ 로그가 발생하며 실행이 안될때 x-pack 플러그인 설치가 필요 &lt;br /&gt;
    &lt;blockquote&gt;
      &lt;p&gt;(../logstash-5.5.1/bin 디렉토리에서 실행) &lt;br /&gt;
$ sudo bin/logstash-plugin install x-pack&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-kafka-메세지가-logstash에서-정상적으로-소비되었는지-확인방법&quot;&gt;4. kafka 메세지가 logstash에서 정상적으로 소비되었는지 확인방법&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;(kafka가 설치된 디렉토리에서 실행)
$ bin/kafka-run-class.sh kafka.tools.ConsumerOffsetChecker –zookeeper localhost:2181 –group logstash –topic apache_logs&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(결과)
Group           Topic                          Pid Offset          logSize         Lag             Owner
logstash        apache_logs                    0   3               3               0               none
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;ul&gt;
    &lt;li&gt;Group은 소비그룹&lt;/li&gt;
    &lt;li&gt;logsize는 전체 메세지 개수&lt;/li&gt;
    &lt;li&gt;Offset은 소비된 메세지 개수&lt;/li&gt;
    &lt;li&gt;Log은 남은 메세지 개수&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;5-elastic-search에-생성된-인덱스-및-내용-확인&quot;&gt;5. elastic search에 생성된 인덱스 및 내용 확인&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ curl -XGET 'http://{elastic search가 실행된 ip}:9200/{index}/_search?size=50&amp;amp;pretty' &lt;br /&gt;
예시) $ curl -XGET 'http://192.168.56.102:9200/server-*/_search?size=50&amp;amp;pretty' &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;참고 사이트 &lt;br /&gt;
elastic : &lt;a href=&quot;https://www.elastic.co/guide/en/logstash/current/plugins-inputs-kafka.html&quot;&gt;https://www.elastic.co/guide/en/logstash/current/plugins-inputs-kafka.html&lt;/a&gt; &lt;br /&gt;
elastic(discuss) : &lt;a href=&quot;https://discuss.elastic.co/t/how-to-setup-kafka-input-in-logstash/67155&quot;&gt;https://discuss.elastic.co/t/how-to-setup-kafka-input-in-logstash/67155&lt;/a&gt; &lt;br /&gt;
github(logstash-input-kafka) : &lt;a href=&quot;https://github.com/logstash-plugins/logstash-input-kafka/issues/219&quot;&gt;https://github.com/logstash-plugins/logstash-input-kafka/issues/219&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="elastic" /><category term="kafka" /><summary type="html">Kafka(2.10-0.10.0.1) + Logstash(5.5.1) + Elastic Search(5.5.1)</summary></entry><entry><title type="html">log를 filebeat(5.3.0) 이용하여 kafka(0.10.0.1)로 프로듀싱하기</title><link href="http://localhost:4000/elastic,/kafka/2017/09/20/filebeat_kafka.html" rel="alternate" type="text/html" title="log를 filebeat(5.3.0) 이용하여 kafka(0.10.0.1)로 프로듀싱하기" /><published>2017-09-20T09:51:42+09:00</published><updated>2017-09-20T09:51:42+09:00</updated><id>http://localhost:4000/elastic,/kafka/2017/09/20/filebeat_kafka</id><content type="html" xml:base="http://localhost:4000/elastic,/kafka/2017/09/20/filebeat_kafka.html">&lt;p&gt;filebeat(5.3.0), kafka(2.10-0.10.0.1) 기준&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;예시-filebeat을-이용해서-서버의-apache-log를-kafka로-프로듀싱하기&quot;&gt;예시) filebeat을 이용해서 서버의 apache log를 kafka로 프로듀싱하기&lt;/h4&gt;

&lt;h4 id=&quot;1-apach2-설치&quot;&gt;1. apach2 설치&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ sudo apt-get update &lt;br /&gt;
$ sudo apt-get install apache2 &lt;br /&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;실행확인 &lt;br /&gt;
$ curl localhost &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;로그 조회 &lt;br /&gt;
$ tail -F /var/log/apache2/access.log &lt;br /&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;2-kafka-설치-및-실행-topic-생성-&quot;&gt;2. kafka 설치 및 실행, Topic 생성 &lt;br /&gt;&lt;/h4&gt;
&lt;p&gt;※ &lt;a href=&quot;/kafka/2017/09/05/kafka_install_exec.html&quot;&gt;‘kafka(0.10.0.1) 설치 및 실행’ 참고 &lt;/a&gt; &lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;apache_logs topic 생성 &lt;br /&gt;
    &lt;blockquote&gt;
      &lt;p&gt;(../kafka 디렉토리에서 실행) &lt;br /&gt;
$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic apache_logs &lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-filebeat-설치-및-실행-&quot;&gt;3. filebeat 설치 및 실행 &lt;br /&gt;&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;3-1 파일 다운로드 &lt;br /&gt;
$ wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.3.0-linux-x86_64.tar.gz &lt;br /&gt;
3-2. 압축 해제 &lt;br /&gt;
$ tar xzvf filebeat-5.3.0-linux-x86_64.tar.gz  &lt;br /&gt;
3-3. 설정 파일 수정 &lt;br /&gt;
$ cd filebeat-5.3.0-linux-x86_64/ &lt;br /&gt;
$ vi filebeat.yml &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;filebeat.prospectors:

- input_type: log

  paths:
    - /var/log/apache2/access.log

logging.level: debug
logging.to_files: true
logging.to_syslog: false
logging.files:
  path: /home/user/es/filebeat
  name: mybeat.log
  keepfiles: 7

output.kafka:
   hosts: [&quot;192.168.56.103:9092&quot;]
   topic: 'apache_logs'
   partition.round_robin:
      reachable_only: false
   required_acks: 1
   compression: gzip
   max_message_bytes: 1000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;※ hosts: [“192.168.56.103:9092”]의 IP부분은 kafka가 설치된 인스턴스의 IP&lt;/p&gt;

&lt;h4 id=&quot;4-filebeat-실행&quot;&gt;4. filebeat 실행&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;(../filebeat 디렉토리에서 실행) &lt;br /&gt;
$ nohup ./filebeat -e -c filebeat.yml &amp;amp; &lt;br /&gt;
(실행 후 로그를 보기위해서는 $ ./filebeat -e -c filebeat.yml) &lt;br /&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;참고 : 실행이 정상적으로 되지 않고 Failed to connect to broker localhost:9092 이런 로그가 노출될 때 kafka의 설정을 아래처럼 localhost가 아닌 위처럼 ip를 써줘야 함
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vi /usr/local/kafka/config/server.properties
advertised.listeners=PLAINTEXT://192.168.56.103:9092
zookeeper.connect=192.168.56.103:2181
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;5-kafka에-저장되어-있는-apache-로그-확인&quot;&gt;5. kafka에 저장되어 있는 apache 로그 확인&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;(../kafka 디렉토리에서 실행) &lt;br /&gt;
$ bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic apache_logs --from-beginning &lt;br /&gt;&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;결과
user@node2:/usr/local/kafka$ bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic apache_logs --from-beginning
{&quot;@timestamp&quot;:&quot;2017-09-14T00:45:06.589Z&quot;,&quot;beat&quot;:{&quot;hostname&quot;:&quot;node1&quot;,&quot;name&quot;:&quot;node1&quot;,&quot;version&quot;:&quot;5.3.0&quot;},&quot;input_type&quot;:&quot;log&quot;,&quot;message&quot;:&quot;::1 - - [14/Sep/2017:09:32:21 +0900] \&quot;GET / HTTP/1.1\&quot; 200 11764 \&quot;-\&quot; \&quot;curl/7.35.0\&quot;&quot;,&quot;offset&quot;:82,&quot;source&quot;:&quot;/var/log/apache2/access.log&quot;,&quot;type&quot;:&quot;log&quot;}
Processed a total of 1 messages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="elastic" /><category term="kafka" /><summary type="html">filebeat(5.3.0), kafka(2.10-0.10.0.1) 기준</summary></entry><entry><title type="html">kafka(0.10.0.1) 설치 및 실행</title><link href="http://localhost:4000/kafka/2017/09/05/kafka_install_exec.html" rel="alternate" type="text/html" title="kafka(0.10.0.1) 설치 및 실행" /><published>2017-09-05T09:51:42+09:00</published><updated>2017-09-05T09:51:42+09:00</updated><id>http://localhost:4000/kafka/2017/09/05/kafka_install_exec</id><content type="html" xml:base="http://localhost:4000/kafka/2017/09/05/kafka_install_exec.html">&lt;h3 id=&quot;kafka-설치-및-실행-방법ubuntu-1404-기준-&quot;&gt;kafka 설치 및 실행 방법(ubuntu 14.04 기준) &lt;br /&gt;&lt;/h3&gt;

&lt;h4 id=&quot;1-java-설치&quot;&gt;1. JAVA 설치&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ sudo add-apt-repository ppa:openjdk-r/ppa &lt;br /&gt;
$ sudo apt-get update  &lt;br /&gt;
$ sudo apt-get install openjdk-8-jdk  &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;2-kafka-설치-usrlocal-디렉토리-내-설치-후-심볼링-링크-설정-&quot;&gt;2. kafka 설치 (/usr/local/ 디렉토리 내 설치 후 심볼링 링크 설정) &lt;br /&gt;&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ wget http://apache.mirror.cdnetworks.com/kafka/0.10.0.1/kafka_2.10-0.10.0.1.tgz &lt;br /&gt;
$ tar zxvf kafka_2.10-0.10.0.1.tgz &lt;br /&gt;
$ sudo cp -r kafka_2.10-0.10.0.1 /usr/local/ &lt;br /&gt;
$ sudo ln -s /usr/local/kafka_2.10-0.10.0.1/ /usr/local/kafka &lt;br /&gt;
$ sudo mkdir -p /tmp/zookeeper&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;3-kafka-broker-설정&quot;&gt;3. kafka broker 설정&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ vi {$KAFKA_HOME}/config/server.properties &lt;br /&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;broker.id=0 부분의 0을 1이상으로 변경 (각 kafka broker 마다 id가 달라야 함)&lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;로그를 저장하는 디렉토리 설정은 log.dirs=/tmp/kafka-logs 부분 &lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;참고. zookeeper 관련 설정변경은 {$KAFKA_HOME}/config/zookeeper.properties 파일 &lt;br /&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;4-zookeeper-및-kafka-broker-실행--중지-shell-생성&quot;&gt;4. zookeeper 및 kafka broker 실행 / 중지 shell 생성&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;../usr/local/kafka$ vi kafka-start.sh &lt;br /&gt;&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KAFKA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/kafka 
&lt;span class=&quot;nv&quot;&gt;$KAFKA_HOME&lt;/span&gt;/bin/kafka-server-start.sh &lt;span class=&quot;nt&quot;&gt;-daemon&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$KAFKA_HOME&lt;/span&gt;/config/server.properties 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;../usr/local/kafka$ vi kafka-stop.sh&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KAFKA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/kafka
&lt;span class=&quot;nv&quot;&gt;$KAFKA_HOME&lt;/span&gt;/bin/kafka-server-stop.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;../usr/local/kafka$ vi zk-start.sh&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;nohup &lt;/span&gt;bin/zookeeper-server-start.sh &lt;span class=&quot;nt&quot;&gt;-daemon&lt;/span&gt; config/zookeeper.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;../usr/local/kafka$ vi zk-stop.sh&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;KAFKA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/kafka
&lt;span class=&quot;nv&quot;&gt;$KAFKA_HOME&lt;/span&gt;/bin/zookeeper-server-stop.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;5-zookeeper-kafka-broker-실행&quot;&gt;5. zookeeper, kafka broker 실행&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ sudo ./zk-start.sh &lt;br /&gt;
$ sudo ./kafka-start.sh&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;6-topic-생성-및-테스트-bin-디렉토리-내에서-실행-&quot;&gt;6. topic 생성 및 테스트 (bin 디렉토리 내에서 실행) &lt;br /&gt;&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;6-1. topic 생성 (replication-factor 1, partitions 1) &lt;br /&gt;
$ ./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test_topic &lt;br /&gt;&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;결과
Created topic &quot;test_topic&quot;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;6-2. 생성된 topic 정보 조회 &lt;br /&gt;
$ ./kafka-topics.sh --describe --zookeeper localhost:2181 --topic test_topic &lt;br /&gt;&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;결과
Topic:test_topic        PartitionCount:1        ReplicationFactor:1     Configs: &amp;lt;br&amp;gt;
        Topic: test_topic       Partition: 0    Leader: 1       Replicas: 1     Isr: 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;6-3 토픽 내 메세지 생성 (produce / 종료는 ctrl + c) - &lt;a href=&quot;/kafka/2017/09/01/kafka_leader_not_available.html&quot;&gt;LEADER_NOT_AVAILABLE 에러 발생 시 - 참고&lt;/a&gt;  &lt;br /&gt;
$ ./kafka-console-producer.sh --broker-list localhost:9092 --topic test_topic &lt;br /&gt;&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(입력) message test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;6-4 생성된 메세지 확인 (consume / 종료는 ctrl + c) &lt;br /&gt;
$ ./kafka-console-consumer.sh --zookeeper localhost:2181 --topic test_topic --from-beginning&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;결과
message test
Processed a total of 1 messages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;6-5 토픽 삭제 (&lt;a href=&quot;/kafka/2017/08/31/kafka_delete_topic.html&quot;&gt;삭제 전 설정 변경 필요 - 참고&lt;/a&gt;) &lt;br /&gt;
$ ./kafka-topics.sh --delete --zookeeper localhost:2181 --topic test_topic&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;참고 사이트 &lt;br /&gt;
kafka.apache.org : &lt;a href=&quot;https://kafka.apache.org/quickstart&quot;&gt;https://kafka.apache.org/quickstart&lt;/a&gt; &lt;br /&gt;
김용환님의 블로그 : &lt;a href=&quot;http://knight76.tistory.com/entry/kafka-01011-%EC%84%A4%EC%B9%98&quot;&gt;http://knight76.tistory.com/entry/kafka-01011-%EC%84%A4%EC%B9%98&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="kafka" /><summary type="html">kafka 설치 및 실행 방법(ubuntu 14.04 기준)</summary></entry><entry><title type="html">kafka LEADER_NOT_AVAILABLE 에러</title><link href="http://localhost:4000/kafka/2017/09/01/kafka_leader_not_available.html" rel="alternate" type="text/html" title="kafka LEADER_NOT_AVAILABLE 에러" /><published>2017-09-01T09:51:42+09:00</published><updated>2017-09-01T09:51:42+09:00</updated><id>http://localhost:4000/kafka/2017/09/01/kafka_leader_not_available</id><content type="html" xml:base="http://localhost:4000/kafka/2017/09/01/kafka_leader_not_available.html">&lt;h3 id=&quot;kafka-leader_not_available-에러-발생-시-&quot;&gt;kafka LEADER_NOT_AVAILABLE 에러 발생 시 &lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;메세지를 생성할때 LEADER_NOT_AVAILABLE 에러가 발생하면서 안될 경우  &lt;br /&gt;
ex) WARN Error while fetching metadata with correlation id 0 : {topic_name=LEADER_NOT_AVAILABLE} (org.apache.afka.clients.NetworkClient) &lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;vi {$KAFKA_HOME}/config/server.properties &lt;br /&gt;&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;advertised.listeners = PLAINTEXT://localhost:9092
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;설정 추가(주석 해제) 후 kafka 재시작 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;참고 :  &lt;br /&gt;
kafka.apache.org : &lt;a href=&quot;https://kafka.apache.org/documentation/&quot;&gt;https://kafka.apache.org/documentation/&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="kafka" /><summary type="html">kafka LEADER_NOT_AVAILABLE 에러 발생 시 메세지를 생성할때 LEADER_NOT_AVAILABLE 에러가 발생하면서 안될 경우 ex) WARN Error while fetching metadata with correlation id 0 : {topic_name=LEADER_NOT_AVAILABLE} (org.apache.afka.clients.NetworkClient)</summary></entry><entry><title type="html">kafka topic 삭제 설정</title><link href="http://localhost:4000/kafka/2017/08/31/kafka_delete_topic.html" rel="alternate" type="text/html" title="kafka topic 삭제 설정" /><published>2017-08-31T09:51:42+09:00</published><updated>2017-08-31T09:51:42+09:00</updated><id>http://localhost:4000/kafka/2017/08/31/kafka_delete_topic</id><content type="html" xml:base="http://localhost:4000/kafka/2017/08/31/kafka_delete_topic.html">&lt;h3 id=&quot;kafka-토픽-삭제-설정-&quot;&gt;kafka 토픽 삭제 설정 &lt;br /&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;$ vi {$KAFKA_HOME}/config/server.properties&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;delete.topic.enable=true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;설정 추가 필요 &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;해당 값을 설정 후 kafka 재시작 &lt;br /&gt;
위 설정값의 default는 false로 true로 설정해주지 않으면 해당 topic은 삭제 상태로 메세지가 들어와도 처리되지 않는 현상 발생함&lt;/p&gt;</content><author><name></name></author><category term="kafka" /><summary type="html">kafka 토픽 삭제 설정</summary></entry><entry><title type="html">Linux : Dirty Page Parameters</title><link href="http://localhost:4000/linux/2017/08/16/linux_dirty_cache_paramater.html" rel="alternate" type="text/html" title="Linux : Dirty Page Parameters" /><published>2017-08-16T09:51:42+09:00</published><updated>2017-08-16T09:51:42+09:00</updated><id>http://localhost:4000/linux/2017/08/16/linux_dirty_cache_paramater</id><content type="html" xml:base="http://localhost:4000/linux/2017/08/16/linux_dirty_cache_paramater.html">&lt;h3 id=&quot;dirty-page-란-링크&quot;&gt;&lt;a href=&quot;/linux/2017/08/10/linux_page_cache_dirty_page.html&quot;&gt;Dirty Page 란 (링크)&lt;/a&gt;&lt;/h3&gt;

&lt;h4 id=&quot;dirty-page-parameters-참고링크-&quot;&gt;Dirty Page Parameters (&lt;a href=&quot;https://www.kernel.org/doc/Documentation/sysctl/vm.txt&quot;&gt;참고링크&lt;/a&gt;) &lt;br /&gt;&lt;/h4&gt;
&lt;p&gt;(ubuntu 14.04, Kernal 4.2.0-27-generic 기준)&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ sysctl -a | grep dirty&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vm.dirty_background_bytes = 0
vm.dirty_background_ratio = 10
vm.dirty_bytes = 0
vm.dirty_expire_centisecs = 3000
vm.dirty_ratio = 20
vm.dirty_writeback_centisecs = 500
vm.dirtytime_expire_seconds = 43200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;vm.dirty_background_bytes : 해당 임계치 사이즈(bytes)까지 dirty page가 도달하게 될 경우 flusher threads가 writeback을 진행&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vm.dirty_background_ratio : 사용가능한 총 메모리에서의 백분율로 해당 임계치 백분율까지 dirty page가 도달하게 될 경우 flusher threads가 writeback을 진행&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vm.dirty_bytes : 메모리에 flushing 되기 전 dirty page로 채울 수 있는 최대 값 (bytes)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vm.dirty_expire_centisecs :  flushing 전 dirty page에 있을 수 있는 기간.  flusher threads가 writeback을 진행하면 더티 페이지가 얼마나 오래된 지 확인하고, 이 값보다 오래된 경우 디스크에 비동기 적으로 기록 (메모리에 더티 페이지를 보유하는 것이 안전하지 않기 때문에 이는 데이터 손실에 대한 보호 장치이기도 함)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;vm.dirty_ratio : 메모리에 flushing 되기 전 dirty page로 채울 수있는 시스템 메모리의 최대 백분율(%)
    &lt;ul&gt;
      &lt;li&gt;설정(dirty_ratio)보다 많은 dirty page를 지속적으로 사용하게 되면 linux에서는 flushing을 정상적으로 수행하지 못하는 것으로 판단하고 write를 중지함, 거기에 높은 load average까지 발생시킴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vm.dirty_writeback_centisecs : pdflush/flush/kdmflush 프로세스가 깨어나고 작업이 완료되어야하는지 확인하는 빈도 (500 &amp;gt; 5초)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;vm.dirtytime_expire_seconds : dirty time 만료되는 시간 조정하는 파라메터 (http://lists.ceph.com/pipermail/ceph-commit-ceph.com/2015-April/000083.html)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ &lt;a href=&quot;https://www.kernel.org/doc/Documentation/sysctl/vm.txt&quot;&gt;_bytes 버전을 설정하면 _ratio 버전은 0이되고 그 반대의 경우도 마찬가지임&lt;/a&gt;   &lt;br /&gt;
※ &lt;a href=&quot;https://lwn.net/Articles/216853/&quot;&gt;dirty_ratio보다 dirty_backround_ratio 수치가 클 경우 자동으로 dirty_backround_ratio = dirty_ratio / 2로 설정 &lt;/a&gt;  &lt;br /&gt;
※ dirty_ratio, background_ratio의 수치는 사용가능한 총 메모리에서의 백분율로 계산 (&lt;a href=&quot;https://www.kernel.org/doc/Documentation/sysctl/vm.txt&quot;&gt;시스템 총 메모리와 동일하지 않음&lt;/a&gt;)  &lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;ratio = dirty / MemAvailable * 100 ($ cat /proc/meminfo) &lt;br /&gt;
(MemAvailable이 없을 경우 : &lt;a href=&quot;https://www.reddit.com/r/linux/comments/3h7w8f/better_linux_disk_caching_performance_with/&quot;&gt;이용 가능한 메모리 = (MemFree + Cached - Mapped)&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;※ parameter 변경 및 적용방법
예) dirty_ratio, dirty_background_ratio
1) 설정 변경
$ sudo sysctl -w vm.dirty_ratio=10
$ sudo sysctl -w vm.dirty_background_ratio=5
2) 변경내용 적용 (커밋)
$ sudo sysctl -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고 사이트
kernel.org : &lt;a href=&quot;https://www.kernel.org/doc/Documentation/sysctl/vm.txt&quot;&gt;https://www.kernel.org/doc/Documentation/sysctl/vm.txt&lt;/a&gt; &lt;br /&gt;
lists.ceph.com : &lt;a href=&quot;http://lists.ceph.com/pipermail/ceph-commit-ceph.com/2015-April/000083.html&quot;&gt;http://lists.ceph.com/pipermail/ceph-commit-ceph.com/2015-April/000083.html&lt;/a&gt; &lt;br /&gt;
lwn.net : &lt;a href=&quot;https://lwn.net/Articles/216853/&quot;&gt;https://lwn.net/Articles/216853/&lt;/a&gt; &lt;br /&gt;
reddit : &lt;a href=&quot;https://www.reddit.com/r/linux/comments/3h7w8f/better_linux_disk_caching_performance_with/&quot;&gt;https://www.reddit.com/r/linux/comments/3h7w8f/better_linux_disk_caching_performance_with/&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="linux" /><summary type="html">Dirty Page 란 (링크)</summary></entry><entry><title type="html">Linux : Page Cache, Dirty Page</title><link href="http://localhost:4000/linux/2017/08/10/linux_page_cache_dirty_page.html" rel="alternate" type="text/html" title="Linux : Page Cache, Dirty Page" /><published>2017-08-10T09:51:42+09:00</published><updated>2017-08-10T09:51:42+09:00</updated><id>http://localhost:4000/linux/2017/08/10/linux_page_cache_dirty_page</id><content type="html" xml:base="http://localhost:4000/linux/2017/08/10/linux_page_cache_dirty_page.html">&lt;h3 id=&quot;1-page-cache란--cat-procmeminfo의-cached&quot;&gt;1. Page Cache란 ($ cat /proc/meminfo의 Cached)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.linux-tutorial.info/modules.php?name=MContent&amp;amp;pageid=310&quot;&gt;Linux Page Cache의 역할은 디스크의 파일에 대한 액세스 속도를 향상시키기 위함&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://unixadminschool.com/blog/2013/10/rhel-6-controlling-cache-memory-page-cache-size/&quot;&gt;Write back 방식에서 page cache는 사용자 프로세스가 읽기 또는 쓰기를 시작할 때마다 사용되며 커널은 사용자가 작업중인 파일의 사본을 찾으며 그러한 사본이없는 경우 캐시 메모리의 한 페이지를 새로 할당하고 디스크에서 읽은 해당 내용을 적재&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;page cache는 linux에서 유동적으로 할당됨 (&lt;a href=&quot;https://www.kernel.org/doc/gorman/html/understand/understand009.html&quot;&gt;Physical Page Allocation&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;임의적으로 disable 할 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-dirty-page란--cat-procmeminfo의-dirty&quot;&gt;2. Dirty Page란 ($ cat /proc/meminfo의 Dirty)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;읽은 파일이 디스크에 업데이트 되지 않고 page cache 내 특정 공간에만 업데이트 되어 있는 경우가 있는데 이때 그 특정 공간을 dirty page라고 함&lt;/li&gt;
  &lt;li&gt;dirty page의 내용들은 page cache의 효율화를 위해 정해진 설정을 통해 주기적으로 디스크에 적재되고 dirty 공간을 비우게 되는데 이를 flushing이라고 함
    &lt;blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;http://unixadminschool.com/blog/2013/10/rhel-6-controlling-cache-memory-page-cache-size/&quot;&gt;dflush (kernel version 2.6.31까지), flush (커널 버전 2.6.32 이상)&lt;/a&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;설정(dirty_ratio)보다 많은 dirty page를 지속적으로 사용하게 되면 linux에서는 flushing을 정상적으로 수행하지 못하는 것으로 판단하고 write를 중지. 거기에 상태 D 프로세스 증가시키며 높은 load average까지 발생시킴 &lt;br /&gt;
  ※ 이때 커널 로그(/var/log/kern.log)에서는 아래와 같은 로그가 발생&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;
      INFO: task {process}:{port} blocked for more than 120 seconds.
      &quot;echo 0 &amp;gt; /proc/sys/kernel/hung_task_timeout_secs&quot; disables this message.
     &lt;/code&gt;			  	
      &lt;br /&gt;- hung_task.c 이 코드에 의하면 위는 state D 상태에 머물러 있는 작업을 감지하는 커널스래드이며 위 로그는 해당 작업이 D 상태로 머물러 있다는 의미 &lt;br /&gt;
      - 아래처럼 튜닝을 해주면 해결되는 경우가 있음 (&lt;a href=&quot;https://www.blackmoreops.com/2014/09/22/linux-kernel-panic-issue-fix-hung_task_timeout_secs-blocked-120-seconds-problem/&quot;&gt;참고 사이트&lt;/a&gt;)
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo sysctl -w vm.dirty_ratio=10  &lt;br /&gt;
$ sudo sysctl -w vm.dirty_background_ratio=5  &lt;br /&gt;
$ sudo sysctl -p  &lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;참고 사이트 &lt;br /&gt;
linux-tutorial.info : &lt;a href=&quot;http://www.linux-tutorial.info/modules.php?name=MContent&amp;amp;pageid=310&quot;&gt;http://www.linux-tutorial.info/modules.php?name=MContent&amp;amp;pageid=310&lt;/a&gt; &lt;br /&gt;
unixadminschool.com : &lt;a href=&quot;http://unixadminschool.com/blog/2013/10/rhel-6-controlling-cache-memory-page-cache-size/&quot;&gt;http://unixadminschool.com/blog/2013/10/rhel-6-controlling-cache-memory-page-cache-size/&lt;/a&gt; &lt;br /&gt;
kernel.org(1) : &lt;a href=&quot;https://www.kernel.org/doc/gorman/html/understand/understand009.html&quot;&gt;https://www.kernel.org/doc/gorman/html/understand/understand009.html&lt;/a&gt; &lt;br /&gt;
kernel.org(2) : &lt;a href=&quot;https://www.kernel.org/doc/Documentation/sysctl/vm.txt&quot;&gt;https://www.kernel.org/doc/Documentation/sysctl/vm.txt&lt;/a&gt; &lt;br /&gt;
www.blackmoreops.com : &lt;a href=&quot;https://www.blackmoreops.com/2014/09/22/linux-kernel-panic-issue-fix-hung_task_timeout_secs-blocked-120-seconds-problem/&quot;&gt;https://www.blackmoreops.com/2014/09/22/linux-kernel-panic-issue-fix-hung_task_timeout_secs-blocked-120-seconds-problem/&lt;/a&gt; &lt;br /&gt;
Linux Tuning The VM (memory) Subsystem : &lt;a href=&quot;https://www.cyberciti.biz/faq/linux-kernel-tuning-virtual-memory-subsystem/&quot;&gt;https://www.cyberciti.biz/faq/linux-kernel-tuning-virtual-memory-subsystem/&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="linux" /><summary type="html">1. Page Cache란 ($ cat /proc/meminfo의 Cached) Linux Page Cache의 역할은 디스크의 파일에 대한 액세스 속도를 향상시키기 위함 Write back 방식에서 page cache는 사용자 프로세스가 읽기 또는 쓰기를 시작할 때마다 사용되며 커널은 사용자가 작업중인 파일의 사본을 찾으며 그러한 사본이없는 경우 캐시 메모리의 한 페이지를 새로 할당하고 디스크에서 읽은 해당 내용을 적재 page cache는 linux에서 유동적으로 할당됨 (Physical Page Allocation) 임의적으로 disable 할 수 없음</summary></entry><entry><title type="html">퀵정렬 (quick Sort)</title><link href="http://localhost:4000/algorithm/2017/08/05/java_quick_sort.html" rel="alternate" type="text/html" title="퀵정렬 (quick Sort)" /><published>2017-08-05T09:51:42+09:00</published><updated>2017-08-05T09:51:42+09:00</updated><id>http://localhost:4000/algorithm/2017/08/05/java_quick_sort</id><content type="html" xml:base="http://localhost:4000/algorithm/2017/08/05/java_quick_sort.html">&lt;h4 id=&quot;시간복잡도-최선평균-nlog-n-최악-n2의-방법-quick-sort&quot;&gt;시간복잡도 최선/평균 n*log (n), 최악 n^2의 방법 Quick Sort&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif&quot; alt=&quot;Sorting_quicksort_anim&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;분할정복-알고리즘&quot;&gt;분할정복 알고리즘&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;리스트 가운데서 하나의 값을 선택하여 피봇(p)으로 지정&lt;/li&gt;
  &lt;li&gt;피봇 앞에는 피봇보다 값이 작은 모든 값들을 위치, 피봇 뒤에는 피봇보다 값이 큰 모든 값들을 위치시켜 피봇을 기준으로 리스트를 둘로 분할&lt;/li&gt;
  &lt;li&gt;분할된 두 개의 작은 리스트에 대해 재귀(Recursion)적으로 이 과정을 반복. 재귀는 리스트의 크기가 0이나 1이 될 때까지 반복&lt;/li&gt;
  &lt;li&gt;재귀 호출이 한번 진행될 때마다 최소한 하나의 값은 최종적인 위치가 정해지므로, 이 알고리즘은 반드시 종료된다는 것이 보장됨&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;과정&quot;&gt;과정&lt;/h4&gt;
&lt;p&gt;1) 피봇은 p, 리스트 왼쪽 끝과 오른쪽 끝에서 시작한 인덱스들은 l(left), r(right)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 - 3 - 7 - 6 - 2 - 1 - 4    
l                   r   p 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) 리스트 왼쪽에 있는 l 위치의 값이 피봇 값보다 크고, 오른쪽에 있는 r 위치의 값은 피봇 값보다 작으므로 둘을 교환한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 - 3 - 7 - 6 - 2 - 1 - 4 
l                   r   p 
1 - 3 - 7 - 6 - 2 - 5 - 4 
l                   r   p 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3) r 위치의 값이 피봇 값보다 작지만, l 위치의 값도 피봇값보다 작으므로 교환하지 않는다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 - 3 - 7 - 6 - 2 - 5 - 4 
    l           r       p 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4) l위치를 피봇 값보다 큰 값이 나올 때 까지 진행해 r 위치의 값과 교환(swap)한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 - 3 - 7 - 6 - 2 - 5 - 4 
        l       r       p &amp;gt;&amp;gt; swap 
1 - 3 - 2 - 6 - 7 - 5 - 4  
                         p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;5) l위치가 r위치보다 같거나 커지면, l위치의 값과 피봇 값을 교환한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 - 3 - 2 - 6 - 7 - 5 - 4 
           l,r          p &amp;gt;&amp;gt; swap 
1 - 3 - 2 - 4 - 7 - 5 - 6 
            p             
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;6) 최종 위치가 정해진 피봇 값을 제외하고 좌우의 리스트에 대해 각각 퀵 정렬을 재귀적으로 수행한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 - 3 - 2 
1 - 2 - 3 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;완성된 리스트는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 - 2 - 3 - 4 - 5 - 6 - 7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;java-소스&quot;&gt;Java 소스&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;quicksort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;quickSort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;quickSort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;c1&quot;&gt;// low &amp;lt; high &amp;gt;&amp;gt;&amp;gt; low &amp;lt; right&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

				&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;quickSort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;quickSort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;결과&quot;&gt;결과&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4 7 6 8 5 9 
4 7 6 8 5 9 
4 5 6 8 7 9 
4 5 6 7 8 9 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고 사이트&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;wikipedia : &amp;lt;ko.wikipedia.org/wiki/퀵_정렬&amp;gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="algorithm" /><summary type="html">시간복잡도 최선/평균 n*log (n), 최악 n^2의 방법 Quick Sort</summary></entry><entry><title type="html">병합정렬 (Merge Sort)</title><link href="http://localhost:4000/algorithm/2017/08/01/java_merge_sort.html" rel="alternate" type="text/html" title="병합정렬 (Merge Sort)" /><published>2017-08-01T09:51:42+09:00</published><updated>2017-08-01T09:51:42+09:00</updated><id>http://localhost:4000/algorithm/2017/08/01/java_merge_sort</id><content type="html" xml:base="http://localhost:4000/algorithm/2017/08/01/java_merge_sort.html">&lt;h4 id=&quot;시간복잡도-nlog-n-의-방법-mergesort&quot;&gt;시간복잡도 n*log (n) 의 방법 MergeSort&lt;/h4&gt;

&lt;h4 id=&quot;분할정복-알고리즘&quot;&gt;분할정복 알고리즘&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;배열을 반씩 분할&lt;/li&gt;
  &lt;li&gt;동일한 알고리즘을 통해 각각 정렬&lt;/li&gt;
  &lt;li&gt;병합&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/java_merge_sort/merge_sort.png&quot; alt=&quot;merge_sort&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;과정&quot;&gt;과정&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;6 개의 정렬되지 않은 정수형 배열 생성 : Arr (5, 8, 3, 9, 1, 2)&lt;/li&gt;
  &lt;li&gt;배열을 Arr1 = (5, 8, 3)과 Arr2 = (9, 1, 2)로 분할&lt;/li&gt;
  &lt;li&gt;다시 Arr3 = (5, 8)과 Arr4 = (3), Arr5 = (9,1)과 Arr6 = (2)로 분할&lt;/li&gt;
  &lt;li&gt;다시 Arr7 = (5), Arr8 = (8), Arr9 = (9), Arr10 = (1) 및 Arr6 = (2)로 분할&lt;/li&gt;
  &lt;li&gt;값을 비교 후 정렬 및 병합&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;java-소스&quot;&gt;Java 소스&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;mergesort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;

	
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;MergeSort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MergeSort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;MergeSort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;MergeSort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++];&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++];&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++];&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++];&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;결과&quot;&gt;결과&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 8 3 9 1 2 
3 5 8 9 1 2 
3 5 8 1 9 2 
3 5 8 1 2 9 
1 2 3 5 8 9 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고 사이트&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;freecodecamp : &lt;a href=&quot;https://forum.freecodecamp.org/t/freecodecamp-algorithm-merge-sort-guide/16104&quot;&gt;https://forum.freecodecamp.org/t/freecodecamp-algorithm-merge-sort-guide/16104&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="algorithm" /><summary type="html">시간복잡도 n*log (n) 의 방법 MergeSort</summary></entry><entry><title type="html">RSA 비대칭키를 이용하여 패스워드 없이 ssh 접속방법</title><link href="http://localhost:4000/elastic/2017/07/19/ubuntu_rsa_conn_no_pw.html" rel="alternate" type="text/html" title="RSA 비대칭키를 이용하여 패스워드 없이 ssh 접속방법" /><published>2017-07-19T09:51:42+09:00</published><updated>2017-07-19T09:51:42+09:00</updated><id>http://localhost:4000/elastic/2017/07/19/ubuntu_rsa_conn_no_pw</id><content type="html" xml:base="http://localhost:4000/elastic/2017/07/19/ubuntu_rsa_conn_no_pw.html">&lt;p&gt;각 서버간 RSA 비대칭키를 이용 패스워드 없이 접속하는 방법&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;$ ssh-keygen&lt;/li&gt;
    &lt;li&gt;$ ssh-copy-id {계정}@{목적지 서버}&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;예시) node2(192.168.56.102)에서 node1(192.168.56.101)로 패스워드 없이 ssh 접속 &lt;br /&gt;
접속을 시도하는 서버(node2)는 Private Key가 필요, 목적지 서버(node1)는 Public Key가 필요 &lt;br /&gt;
(Public Key키는 자물쇠, Private Key는 그 자물쇠를 여는 키)&lt;/p&gt;

&lt;h3 id=&quot;1-private--public-key-생성-node2에서-실행&quot;&gt;1. Private / Public Key 생성 (node2에서 실행)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ ssh-keygen&lt;/p&gt;
  &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Generating public/private rsa key pair.
Enter file &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;which to save the key &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/home/user/.ssh/id_rsa&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Enter passphrase &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;empty &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;no passphrase&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Enter same passphrase again:
Your identification has been saved &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/user/.ssh/id_rsa.
Your public key has been saved &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/user/.ssh/id_rsa.pub.
The key fingerprint is:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;위처럼 메세지가 뜨는데 저장할 경로를 입력하라는 의미, 엔터를 누르면 /home/{계정명}/.ssh/ 경로에 키들이 생성 &lt;br /&gt;
(Private Key : /home/{계정명}/.ssh/id_rsa / Public Key : /home/{계정명}/.ssh/id_rsa.pub) &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;2-생성한-public-key를-목적지-서버node1에-복사-&quot;&gt;2. 생성한 public Key를 목적지 서버(node1)에 복사 &lt;br /&gt;&lt;/h3&gt;

&lt;h4 id=&quot;방법-1-&quot;&gt;방법 1) &lt;br /&gt;&lt;/h4&gt;
&lt;p&gt;생성된 public 키를 조회(cat)하여 그 내용을 목적지 서버의 /home/{계정}/.ssh/authorized_keys에 복사 &lt;br /&gt;
(authorized_keys파일이 없으면 700권한으로 생성) &lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;방법-2-&quot;&gt;방법 2) &lt;br /&gt;&lt;/h4&gt;
&lt;p&gt;ssh-copy-id {계정}@{목적지 서버 ip} 명령어로 복사 (자동으로 /home/{계정}/.ssh/authorized_keys에 복사됨) &lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;$ ssh-copy-id user@192.168.56.101&lt;/p&gt;
  &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The authenticity of host &lt;span class=&quot;s1&quot;&gt;'192.168.56.101 (192.168.56.101)'&lt;/span&gt; can&lt;span class=&quot;s1&quot;&gt;'t be established.
ECDSA key fingerprint is 83:38:0a:e4:16:d5:20:c0:30:e7:0b:00:f1:0f:6d:b0.
Are you sure you want to continue connecting (yes/no)? yes
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
user@192.168.56.101'&lt;/span&gt;s password:
Number of key&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; added: 1
Now try logging into the machine, with:   &lt;span class=&quot;s2&quot;&gt;&quot;ssh 'user@192.168.56.101'&quot;&lt;/span&gt;
and check to make sure that only the key&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; you wanted were added.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="Ubuntu" /><summary type="html">각 서버간 RSA 비대칭키를 이용 패스워드 없이 접속하는 방법 $ ssh-keygen $ ssh-copy-id {계정}@{목적지 서버}</summary></entry></feed>